{
	"info": {
		"_postman_id": "fa5b2929-9da4-435c-8191-959742c7f0f2",
		"name": "Restful Booker API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "47086788",
		"_collection_link": "https://spaceflight-technologist-50850883-3603148.postman.co/workspace/SRISHA-KJ's-Workspace~1806a68e-f290-457f-8f20-3da9330c5956/collection/47086788-fa5b2929-9da4-435c-8191-959742c7f0f2?action=share&source=collection_link&creator=47086788"
	},
	"item": [
		{
			"name": "Auth Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Auth success (200)\", () => pm.response.to.have.status(200));\r",
							"\r",
							"const json = pm.response.json();\r",
							"pm.test(\"Response has token\", () => pm.expect(json).to.have.property(\"token\"));\r",
							"\r",
							"pm.environment.set(\"auth_token\", json.token);\r",
							"\r",
							"pm.environment.set(\"auth_cookie\", \"token=\" + json.token);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"password\": \"{{password}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create booking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"firstname\", \"User\" + Math.floor(Math.random()*9000 + 1000));\r",
							"pm.environment.set(\"lastname\", \"Auto\");\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Booking created\", () => pm.response.to.have.status(200));\r",
							"\r",
							"const json = pm.response.json();\r",
							"pm.test(\"Response has bookingid\", () => pm.expect(json).to.have.property(\"bookingid\"));\r",
							"\r",
							"pm.environment.set(\"bookingId\", json.bookingid);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"firstname\": \"{{firstname}}\",\r\n  \"lastname\": \"{{lastname}}\",\r\n  \"totalprice\": 111,\r\n  \"depositpaid\": true,\r\n  \"bookingdates\": {\r\n    \"checkin\": \"2025-09-01\",\r\n    \"checkout\": \"2025-09-10\"\r\n  },\r\n  \"additionalneeds\": \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get booking by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get booking success\", () => pm.response.to.have.status(200));\r",
							"\r",
							"const body = pm.response.json();\r",
							"pm.test(\"Firstname exists\", () => pm.expect(body).to.have.property(\"firstname\"));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{bookingId}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Booking updated\", () => pm.response.to.have.status(200));\r",
							"\r",
							"const body = pm.response.json();\r",
							"pm.test(\"Firstname updated\", () => pm.expect(body.firstname).to.eql(\"James\"));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Cookie",
						"value": "{{auth_cookie}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"firstname\": \"James\",\r\n  \"lastname\": \"Brown\",\r\n  \"totalprice\": 111,\r\n  \"depositpaid\": true,\r\n  \"bookingdates\": {\r\n    \"checkin\": \"2025-09-02\",\r\n    \"checkout\": \"2025-09-12\"\r\n  },\r\n  \"additionalneeds\": \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{bookingId}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Partial Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"PATCH booking -> 200\", () => pm.response.to.have.status(200));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "{{auth_cookie}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \"firstname\": \"PatchedName\" }\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{bookingId}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Booking deleted\", () => pm.response.to.have.status(201));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "{{auth_cookie}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/booking/{{bookingId}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		}
	]
}